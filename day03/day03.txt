React란?
-복잡한 인터페이스를 쉽게 구축하기 위해 페이스북에서 만든 js 라이브러리

React 핵심 컨셉?
-리랜더, 컴포넌트

컴포넌트?
-한가지 기능을 수행하는 UI단위

리랜더?
-쪼개진 컴포넌트 화면에 구현할 때 사용하는 rander 함수를 다시 호출하는 과정
-업데이트 이전의 가상 돔프리 상태와 이후의 가상 돔트리 상태를 비교, 업데이트 내용 있다면 진짜 DOM-Tree 업데이트

버츄어돔?
- 가상 돔 트리

패키지 관리툴?
-npx,npm,yarn

리액트 프로젝트 만드는 명령어?
-npx create-react-app 명칭

삼항연산자?
- {조건식 ? true인 경우 :false인 경우}

&&연산자?
- {조건식 && true 인경우}

Styled-components
- 리액트 css 툴 중에 하나

cd..프로젝트 폴더
npm install(i) Styled-components
import styled ...
const z컴포넌트명 = styled.div
        .css
    `

props
- 부모에게 받아온 데이터

defaltProps
- props 없을 때 기본 값

Hook?
-리액트 편하게 쓰게하기 위한 라이브러리, 함수형 컴포넌트에서 사용 가능

useState
- Hooks의 상태 관리 함수
- 컴포넌트에서 바뀌느 값을 관리

useRef
- DOM SELECTER 함수처럼 React에서 특정 Dom 객체에 접근하게 해주는 Hooks 함수
------------------------------------------------------------------------------------

useMemo
-연산된 값(결과)을 반환하여 재사용할수 있게 해주는 Hook 함수

useCallback
- 특정 함수를 새로 만들지 않고 재사용 할 수 있게 해주는 Hook함수
(useMemo 와 useCallback을 사용해서 어떤걸 최적화 할 수 있느냐)

메모리제이션
- 만약 어떠한 연산이나 함수가 복잡하고 결과가 오래걸린다
- 리액트는 상태가 바뀌면 랜더링이 된다.
- 하지만, 랜더링 될 때 값이 바뀌지 않느 부분이라면 이친구 한번더 실행해야하나?
- 값이 안바뀌는 연산이나 함수를 랜더링이 되더라도 재생성하지 않도록 값이나 함수를 재사용
- 즉, 랜더링 시 필요 없는 연산의 시간을 줄여줌

--------------------------------------------------------------------------------------








