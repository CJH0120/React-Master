------------------------------------------------------------------------
React란?
- 사용자 인터페이스를 쉽게 구축하기 위해 페이스북에서 만든 JavaScript 라이브러리

React의 핵심 컨셉
- 리랜더와 컴포넌트

컴포넌트?
- 한가지의 기능을 수행하는 UI단위

리랜더?
-쪼개진 컴포넌트를 사용자의 화면에 구현할 때 사용하는 reander 함수를 다시 호출하는 과정
- 업데이트 이전의 가상 돔 트리(버츄어돔) 상태와 업데이트 이후의 가상 돔 트리 상탤르 비교
- 업데이트 되는 내용이 있다면, 그 때 진짜 돔트리를 업데이트 한다.

버츄얼돔?
- React가 가지고 있는 가상 돔 트리

패치키 관리툴?
- yarn, npm, npx

리엑트 프로젝트 만드는 명령어?
-npx create-react-app 프로젝트명

(바벨, 웹팩,기본 설정 포함, 폴더 정리)
----------------------------------------------------------------------

Styled-components?
=React의 css 스타일링 방법 중 하나

- css 파일이 아닌 js에 작성
- 컴포넌트 호출 시 필요한 코드만 호출(필요한 컴포넌트 내에 작성)
- className을 사용하지 않아 겹치는 오류 방지

단점 : 
- css를 줘야할 태그들을 전부 컴포넌트화 해야한다
<div></div>
<얖></얖>
= 가독성이 떨어진다.
css를 수정할 때 수정해야할 컴포넌트 파일을 직접 찾아야함
----------------------------------------------------------------------

그외의 방법

SASS, SCSS
- 복잡한 작업을 쉽게 해주고, 코드의 재활용성을 높여줌
- css내에서 변수가 사용이 가능 = 확장성이 높음
- 코드의 가독성을 높여주고 유지보수를 쉽게함

Emtion
- Styled-components와 대체될수 있는 유망주, 그러나 사용법이 비슷

= 취향차이, 방식은 달라서 익숙해지는데 오래 걸리지만
= 문법은 같기 때문에 습득하는데는 오래걸리지 않음
----------------------------------------------------------------------

* 대체된다

특히 라이브러리를 사용하는 개발자는 유행에 민감함

React는 하루가 다르게 라이브러리들이 쏟아져 나오고
기존에 있던 라이브러리들은 발전된다.

nextJS = SSR, 구조
----------------------------------------------------------------------

npm install Styled-components
----------------------------------------------------------------------
삼항연산자?
- 조건부 랜더링 방식에 사용된다.
(조건에 충족할 경우 해당 부분을 랜더링)

{조건식 ? ture인 경우 false인 경우}
ex) {is = love ? ❤ : 💔 }

* 비구조화할당(구조분해할당)
const{객체내 키 값} = 객체

= 배열이나 객체의 속성을 해체하여 그 값을 개별 변수에 담을 수 있게 하는
JavaScript 표현식

----------------------------------------------------------------------
var
let, const(ES6) class,promise

호이스팅
=변수/함수 선언 시 먼저 실행되는 현상

consol.log(a) //undefined
var a = 3;


호이스팅이 안된 것처럼 만든것.
참조에러를 일으킴

----------------------------------------------------------------------

Hook = 리액트 편하게 쓰게할 수 있는 기능

React에는 개발 방법 2가지
함수형과 클래스형

1. Class형

class 클래스명 extends Components{
    
};

Class는 다양한 기능을 사용할 수 있지만,
Class는 기계와 사용자로 혼돈시킨다.
숙련된 React 개발자조차도 Class의 완벽한 이해는 힘든일

2.  function형
- 현재 가장 많이 쓰이는 방식
- Hooks의 영향으로 많은 Class를 사용하는 개발자와 기업들이 function으로 전환
- 본래 Class의 React 상태관리(라이프 사이클)을 훨씬 편리하게 해준다


----------------------------------------------------------------------

1. useState
- Hooks의 상태관리 함수
- 컴포넌트에서 바뀌는 값 관리
- 값이 바뀐 것을 감지 랜더링

2. useRef
 -JavaScript getElementById querySelector 같은 DOm Selector 함수처럼
 React에서 DOM에 접근하게 되는 일이 생긴다면 접근하게 해주는 Hooks 함수
 

----------------------------------------------------------------------