--------------------------------------------------
김성용 강사	

forntend 개발자가 하는 역할?
---------------------------------------------------
기존 html, css, js
React는 지금부터 시작해도 늦지 않다
단일페이지 화려한것추천
--------------------------------------------------

프론트엔드 사용법
-> 다양한 개발자들이 개발에 기여
---------------------------------------------------

프로젝트 참여 방안(여러가지 고민)

* 웹 퍼블리싱 프로젝트 (백엔드 개발 x)

(1) 클론코딩
=> 사이트 하나를 찾아서 완벽하게 따라 만들기

(2) 자작 프로젝트
=> 퍼블리싱 프로젝트론 추천하지 않음
: 번거로움 (레이아웃, 이미지 ,로고 다 자체 제작

(3) 클론코딩 + 자작프로젝트
=> 사이트 하나만 찾아서 레이아웃만 유지 + 상호 및 내용물을 내가 하려는 프로젝트로 바꾸기
: 이미지 ,로고는 제작


JS(입력 -> 연산 -> 출력)
입력 = 이벤트 행위
연산 = style을 바꿀껀지
출력 = 
--------------------------------------------------------------------------------------
korpg95274@gmail.com
:일요일 밤까지
: 모티브, 클론이든 지정 사이트, 조장 이름, 핸드폰 번호
: 단톡방에 주에 한번만 간단하게 진척 사항, (현재 사항)


React 란?
-React는 복잡한 사용자 인터페이스를 쉽게 구축하기 위해 페이스북에서 만든 JavaScript 라이브러리 
-각각의 독립적인 컨포너트 단위들을 서로 조립해서 만든다

JSX문법
-React에서 사용하는 문법

라이브러리 (도서관 = 책들의 집합)
- 남들이 코드짜서 만든 기능
- 사용 이유?  모든 코드 직접 코딩
- 용량(사용자 페이지가 넘기는데 한 세월)
---------------------------------------------------------------------------------------------------------
React 장점( 핵심 컨셉)
- re-render 와 components

컨포넌트
- 한가지의 기능을 수행하는 UI단위
- 컴포넌트 DOM tree 처럼 하나의 Vutrual Dom Tree 라는 Tree 형식으로 만들어져있다.

---------------------------------------------------------------------------------------------------------

google.com을 검색했을 때 일어나는 일
[어려워요]
1. google.com 입력
2. 브라우저가 도메인(google.com)을 통해 대응하는 주소
3. HTTP이용하여 도메인서버에 맞는 도메인을 찾아내 페이지 요청
4. 브라우저가 해당 서버에 HTML 문서 요청
5. WAS(서버 도우미) DB가 우선 웹페이지 작업을 처리
6. 작업 처리 결과를 서버에 전송하고 서버는 html 문서와 데이터를 브라우저에게 응답
7. 브라우저가 결과를 파싱 후 화면 단에 출력
---------------------------------------------------------------------------------------------------------

파싱 과정
1. 브라우저에 전달된 html 분석
2. html 파싱(DOM-tree) , css 파싱
3. DOM-TREE, 자바스크립트 엔진 자바스크립트 실행
4. HTML,CSS 합쳐져요 -랜더링엔진(렌더링트리)
5. HTML에 CSS 결정후 레이아웃 과정(크기, 위치계산)
6. 페인트(화면에 그리는 작업)
---------------------------------------------------------------------------------------------------------
* Virtual DOM Tree
- React가 가지고 있는 가상 돔트리
- 진짜 돔 트리를 복사한 것

---------------------------------------------------------------------------------------------------------

*re-render
- 쪼개진 컴포넌트를 사용자에 화면에 구현할 때 사용하는 rander 함수를 다시 호출하는 과정
- 업데이트 이전의 가상 돔 트리 상태와, 업데이트 이후의 가상 돔 트리 상태를 비교
- 업데이트 된 내용이 있다면 그때 Reacl DOM TREE를 업데이트 한다(랜더한다)
---------------------------------------------------------------------------------------------------------

React를 쓰는 이유
- UI 재사용이 좋으며, 코드 가독성이 높다
- 유지보수가 편해진다(문제가 있는 컴포넌트를 빠르게 찾아낼 수 있음)
- React Native (모바일 어플리케이션 언어) 확장성

---------------------------------------------------------------------------------------------------------

* 비슷한 라이브리와 프레임워크
 -VueJS, Angular 

*npm trends
 -npn 시장 비교 사이트
 https://www.npmtrends.com/

* java : int a=3
* javaScript : let a:NUMBER= 3
---------------------------------------------------------------------------------------------------------
=> 결국 React는 사용자 인터페이스를 제작하고 코드를 재사용하며 가독성을 높이기 위하여
리랜더링과 컴포넌트를 사용하는 JAVAScript 라이브러리


*SSR(nextJS, nuxtJS), CSR, MPA, SPA..
---------------------------------------------------------------------------------------------------------


*React Project 만들어보기

yarn, npm, npx
- 세가지 모드 Node 프로젝트에서 설치되는 패키지나 라이브러리들을 관리해주는 툴
- 리엑트는 여러가지 오픈 소스 라이브러리(도구)들을 빌려와 개발

npm
- 노드의 기본 패키지 관리 툴
- 사용빈도가 가장 높음
- create-react-app 실행시 라이브러리 다운 받아야하는데 엄청 무겁다.
-npm 을 통해서 react project를 만들진 않는다.
-npm install 패키지명

npx
- npm과 달리 패키지를 실행만 시켜주는 도구 
- 개발하는 입장이라면 npm과 npx 차이를 알수 없다
- npx를 상ㅇ하면 create-react-app을 install하지 않아도 실행시킬 수 있다
-npm 5.2이상부터는 기본 패키지 관리툴에 포함

yarn
-과거 npm보다 속도,안정성 모두 뛰어나 주목을 받음
-현재 속도, 안정성 npm이 따라 잡은 상태
- 보안성에 있어서 만큼은 npm과 npx 와 결이 다름
- 하지만 npm이 가장 많이 쓰이기 때문에 yarn을 지원하지 않는 라이버리가 많음
- npm install -g yarn
- yarn add 패키지명

---------------------------------------------------------------------------------------------------------
웹팩
 - 가장 많이 사용되는 모듈 번들러
 - 어플리케이션을 구성하는 자원(HTML,CSS,PNG 등을) 모두 각각의 모듈로 보고 이를 조합해서
병한된 하나의 결과물을 만드는 도구 

---------------------------------------------------------------------------------------------------------
모듈
-  프로그래밍 관점에서 특정 기능을 갖고 있는 작은 코드 단위
- 기능을 하는 코드 집합
---------------------------------------------------------------------------------------------------------
=> 웹팩은 JavaScript는 굉장히 대규모 환경이기 때문에 다향한 라이브러리와 모듈들
관련 리소스들을 브라우저에서 이용할 수 있는 번들로 묶어서 결과를 만들어내는 것

---------------------------------------------------------------------------------------------------------
cd프로젝트
npm start
기본포트 3000
---------------------------------------------------------------------------------------------------------
폴더 정리
1. public > favicon.com , index.html만 살리고 삭제
2. src > App.cs, App.js ,index.js,index.css만 살리고 삭제
3. App.css 내용들 삭제해주고. App.js도 필요한 부분 빼고는 삭제
4. index.html 주석 지우고
---------------------------------------------------------------------------------------------------------

*package.json

npm install 패키지명
패키지들의 버전관리



로켓펀치, 원티드, 프로그래머스,점핏









 


